## ArduKey authserver
## written by Bastian Raschke
##


## Installation
##

First you have to install the server via your package manager. For example:

~# apt-get install ardukey-auth-server

Important note: You need to add the "PM Codeworks" repository first. See
http://www.pm-codeworks.de/repository.html for the instructions.


## Optional: Manual package build
##

If you don't want to use pre-build packages, you can easyly build your own
packages using the tool "debuild":

~$ debuild

After that, the generated packages can be found in the upper directory. You can
install the packages with "dpkg":

~# dpkg -i ../*.deb


## Maintaining
##

First add an ArduKey with following command:

~# ardukey-auth-conf --add-ardukey cccccccccccd b0d4a2d69bc4 7a1858592fcb76bd5eb2685421aed45e

So an ArduKey with public id "cccccccccccd", the secret id "b0d4a2d69bc4" and
the AES key "7a1858592fcb76bd5eb2685421aed45e" will be added.

Now, generate a new API id to be able to sign your requests to auth server:

~# ardukey-auth-conf --generate-apikey

The command outputs the "API id" and the "Shared secret". Every system/service
that wants to communicate with the auth server needs its *own* API key!

For example an administrator who wants to set up an ArduKey PAM module on his
server needs one API key to be able to use auth server.


## Test request
##

Now you can test the server. Send a HTTP GET request to:

http://127.0.0.1:8080/ardukeyotp/1.0/verify

with the follwing parameters:

Parameter | Description
----------------------------------------------------
otp       | The one-time-pad type by an ArduKey.
nonce     | A random string, to make request unique.
apiId     | The API id, to identify the API key.
hmac      | The signature of this request.

Example request:
