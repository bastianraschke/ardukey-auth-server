#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
ArduKey authserver configuration tool
@author Bastian Raschke <bastian.raschke@posteo.de>

Copyright 2015 Bastian Raschke
All rights reserved.
"""

import argparse

from ardukeyauth import __version__ as VERSION
from ardukeyauth.configreader import ConfigReader

## Try to parse configuration file
try:
    configReader = ConfigReader()

except Exception as e:
    sys.stderr.write('ArduKey authserver error: ')
    sys.stderr.write('The config file could not be read correctly:\n')
    sys.stderr.write(str(e) + '\n\n')
    sys.stderr.write('Exiting.\n')
    exit(1)

def listArduKeys():
        """
        Lists all available ArduKeys.

        @return boolean
        """

        return True

def addArduKey(publicId, secretId, aesKey):
        """
        Adds a ArduKey.

        @param string publicId
        The public id of ArduKey.

        @param string secretId
        The secret id of ArduKey.

        @param string aesKey
        The AES key as hexadecimal string.

        @return boolean
        """

        return True

def revokeArduKey(publicId):
        """
        Revokes a ArduKey.

        @param string publicId
        The public id of ArduKey.

        @return boolean
        """

        return True

def listAPIKeys():
        """
        Lists all available API keys.

        @return boolean
        """

        return True

def generateAPIKey():
        """
        Generates a new API key.

        @return boolean
        """

        return True

def revokeAPIKey(apiKey):
        """
        Revokes a API key.

        @param string apiKey
        The id of API key.

        @return boolean
        """

        return True

if ( __name__ == '__main__' ):

    parser = argparse.ArgumentParser(description='ArduKey authserver configuration tool ' + VERSION)

    parser.add_argument('--list-ardukeys', metavar='NAME', help='Adds a new ArduKey.')
    parser.add_argument('--add-ardukey', metavar='NAME', help='Adds a new ArduKey.')
    parser.add_argument('--revoke-ardukey', metavar='NAME', help='Revokes a ArduKey.')

    parser.add_argument('--version', '-v', action='version', version='ArduKey authserver configuration tool ' + VERSION, help='Prints version and exits.')

    ## TODO:
    ## list ArduKeys
    ## generate API key
    ## revoke API key
    ## list API keys

    args = vars(parser.parse_args())

    if ( args['add_ardukey'] ):
        addArduKey(args['add_ardukey'])
    elif ( args['revoke_ardukey'] ):
        print('jo')
    else:
        parser.print_help()
